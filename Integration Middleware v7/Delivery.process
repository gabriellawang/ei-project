<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx="http://www.tibco.com/ns/no_namespace_schema_location/new_order.xsd" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns4="http://www.tibco.com/namespaces/tnt/plugins/mail" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/retrieveRegion.xsd" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/retrieveDuration.xsd" xmlns:pfx3="http://xmlns.tibco.com/body" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/retrieveRoute.xsd" xmlns:pfx6="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/new_order.xsd" schemaLocation="/new_order.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/retrieveDuration.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/retrieveRegion.xsd" schemaLocation="/retrieveRegion.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/retrieveRoute.xsd" schemaLocation="/retrieveRoute.xsd"/>
    <pd:name>Delivery.process</pd:name>
    <pd:startName>Receive Order</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="Receive Order">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>65</pd:x>
        <pd:y>130</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>q.deliveryinfo</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/JMS Connection.sharedjmscon</ConnectionReference>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1211</pd:endX>
    <pd:endY>275</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1458373535079</pd:targetNamespace>
    <pd:activity name="Parse Order XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>193</pd:x>
        <pd:y>130</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx:order"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Receive-Order/ns:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Check Deliver Time from GoogleMapAPI">
        <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
        <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
        <pd:x>499</pd:x>
        <pd:y>356</pd:y>
        <config>
            <enableProtocolUI>None</enableProtocolUI>
            <restMethodUI>GET</restMethodUI>
            <restResponseType>XML</restResponseType>
            <authChoiceUI>No Authentication</authChoiceUI>
            <WADLPaths/>
            <WADLBaseURL/>
            <restMethodIDUI/>
            <restURI>https://maps.googleapis.com/maps/api/directions/xml</restURI>
            <restInputReferNode>
                <xsd:element name="Parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Query" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="mode" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="destination" type="xsd:string"/>
                                        <xsd:element name="origin" type="xsd:string"/>
                                        <xsd:element name="key" type="xsd:string"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Header" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Body" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Form" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Text" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Binary" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="content-disposition" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" minOccurs="0">
                                                        <xsd:complexType>
                                                            <xsd:choice>
                                                                <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                <xsd:element name="text" type="xsd:string"/>
                                                                <xsd:element name="fileName" type="xsd:string"/>
                                                            </xsd:choice>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restInputReferNode>
            <restOutputReferNode>
                <xsd:element name="header">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Server" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Range" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Last-Modifie" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restOutputReferNode>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <ns3:Parameters>
                    <Query>
                        <mode>
                            <xsl:value-of select="&quot;driving&quot;"/>
                        </mode>
                        <destination>
                            <xsl:value-of select="$Parse-Order-XML/order/postcode"/>
                        </destination>
                        <origin>
                            <xsl:value-of select="$Get-Vendor-Address/resultSet/Record[1]/address"/>
                        </origin>
                        <key>
                            <xsl:value-of select="&quot;AIzaSyAiV92CJb0bdgykIBPB8y2ES_czHC9l504&quot;"/>
                        </key>
                    </Query>
                </ns3:Parameters>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse GoogleMap XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>668</pd:x>
        <pd:y>358</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx2:DirectionsResponse"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Check-Deliver-Time-from-GoogleMapAPI/ns3:RESTOutput/msg"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send Receipt by Email">
        <pd:type>com.tibco.plugin.mail.MailPubActivity</pd:type>
        <pd:resourceType>ae.activities.MailActivityResource</pd:resourceType>
        <pd:x>883</pd:x>
        <pd:y>362</pd:y>
        <config>
            <newMimeSupport>true</newMimeSupport>
            <inputOutputVersion>5.2.0</inputOutputVersion>
            <host>mail.smtp2go.com:2525</host>
            <useSsl>false</useSsl>
            <ns0:ssl xmlns:ns0="http://www.tibco.com/xmlns/aemeta/services/2002"/>
            <authenticate>true</authenticate>
            <password>7YCZXy6tpfSk</password>
            <username>grabfruit@gmail.com</username>
            <InputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </InputHeaders>
        </config>
        <pd:inputBindings>
            <ns4:mailActivityInput>
                <from>
                    <xsl:value-of select="&quot;alex-noreply@grabfruit.com&quot;"/>
                </from>
                <to>
                    <xsl:value-of select="&quot;gabriellawang1995@gmail.com&quot;"/>
                </to>
                <subject>
                    <xsl:value-of select="&quot;Your GrabFruit Order&quot;"/>
                </subject>
                <pfx3:bodyElement>
                    <bodyText>
                        <xsl:value-of select="concat(&quot;Dear &quot;,$Parse-Order-XML/order/username,&quot;, &#xA;&#xA;You have ordered from &quot;,$Parse-Order-XML/order/storeName,&quot; and taken up &quot;,$Parse-Order-XML/order/package/qty,&quot; of &quot;,$Parse-Order-XML/order/package/name,&quot;. &#xA;&#xA;We have received your payment of $&quot;,$Parse-Order-XML/order/totalPrice,&quot; dollars and your order will arrive in &quot;,$Parse-GoogleMap-XML/DirectionsResponse/route/leg/duration/text,&quot;.&#xA;&#xA;Thank you for choosing GrabFruit! We hope to see you again!&#xA;&#xA;Best regards,&#xA;GrabFruit&quot;)"/>
                    </bodyText>
                </pfx3:bodyElement>
            </ns4:mailActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Inform Courier">
        <pd:type>com.tibco.plugin.mail.MailPubActivity</pd:type>
        <pd:resourceType>ae.activities.MailActivityResource</pd:resourceType>
        <pd:x>577</pd:x>
        <pd:y>136</pd:y>
        <config>
            <newMimeSupport>true</newMimeSupport>
            <inputOutputVersion>5.2.0</inputOutputVersion>
            <host>mail.smtp2go.com:2525</host>
            <authenticate>true</authenticate>
            <username>grabfruit@gmail.com</username>
            <password>7YCZXy6tpfSk</password>
            <InputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </InputHeaders>
        </config>
        <pd:inputBindings>
            <ns4:mailActivityInput>
                <from>
                    <xsl:value-of select="&quot;alex-noreply@grabfruit.com&quot;"/>
                </from>
                <xsl:for-each select="$Get-Delivery-Email/resultSet/Record/email">
                    <to>
                        <xsl:value-of select="."/>
                    </to>
                </xsl:for-each>
                <subject>
                    <xsl:value-of select="&quot;You have been activated!&quot;"/>
                </subject>
                <pfx3:bodyElement>
                    <bodyText>
                        <xsl:value-of select="concat(&quot;Dear courrier, &#xA;&#xA;Please collect your order from &quot;,$Parse-Order-XML/order/storeName,&quot; and make sure it is &quot;,$Parse-Order-XML/order/package/qty,&quot; quantity of &quot;,$Parse-Order-XML/order/package/name,&quot;. &#xA;&#xA;Please deliver the package to &quot;,$Parse-Order-XML/order/address,&quot;  and your customer is &quot;,$Parse-Order-XML/order/username,&quot;.&#xA;&#xA;Best regards,&#xA;GrabFruit&quot;)"/>
                    </bodyText>
                </pfx3:bodyElement>
            </ns4:mailActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Get Delivery Email">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>320</pd:x>
        <pd:y>130</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/JDBC Connection sys-del.sharedjdbc</jdbcSharedConfig>
            <statement>SELECT email FROM info where id  in (SELECT id FROM scope where region = ?)</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>region</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>email</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <region>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-Order-XML/order/region)">
                            <xsl:value-of select="$Parse-Order-XML/order/region"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </region>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Inform Vendor System">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>195</pd:x>
        <pd:y>353</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>q.confirmOrder</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/JMS Connection.sharedjmscon</ConnectionReference>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <Body>
                    <xsl:value-of select="concat($Parse-Order-XML/order/storeName,'  ', $Parse-Order-XML/order/package/name, '  ', $Parse-Order-XML/order/package/qty)"/>
                </Body>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Get Vendor Address">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>338</pd:x>
        <pd:y>344</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/JDBC Connection sys-ven.sharedjdbc</jdbcSharedConfig>
            <statement>select address from vendors where id = ?</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>id</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>address</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <id>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-Order-XML/order/storeName)">
                            <xsl:value-of select="$Parse-Order-XML/order/storeName"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="iterate until delivery have ended">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>706</pd:x>
        <pd:y>1</pd:y>
        <pd:width>361</pd:width>
        <pd:height>251</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>repeat</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:repeatCondition>$i=1</pd:repeatCondition>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Wait-for-JMS-Queue-Message-Start-End</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>JMS Queue Sender End</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>JMS Queue Sender Start</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Wait-for-JMS-Queue-Message-Start-End</pd:from>
            <pd:to>JMS Queue Sender Start</pd:to>
            <pd:xpathDescription>delivery started</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65281</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>contains($Wait-for-JMS-Queue-Message-Start-End/ns:ActivityOutput/Body, "start")</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Wait-for-JMS-Queue-Message-Start-End</pd:from>
            <pd:to>JMS Queue Sender End</pd:to>
            <pd:xpathDescription>delivery ended</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16763905</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>contains($Wait-for-JMS-Queue-Message-Start-End/ns:ActivityOutput/Body, "end")</pd:xpath>
        </pd:transition>
        <pd:activity name="Wait-for-JMS-Queue-Message-Start-End">
            <pd:type>com.tibco.plugin.jms.JMSQueueSignalInActivity</pd:type>
            <pd:resourceType>ae.activities.JMSQueueSignalInActivity</pd:resourceType>
            <pd:x>784</pd:x>
            <pd:y>89</pd:y>
            <config>
                <_eventTimeout>60000</_eventTimeout>
                <PermittedMessageType>Text</PermittedMessageType>
                <SessionAttributes>
                    <transacted>false</transacted>
                    <acknowledgeMode>1</acknowledgeMode>
                    <maxSessions>-1</maxSessions>
                    <destination>q.deliveryStatus</destination>
                </SessionAttributes>
                <ConfigurableHeaders>
                    <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                    <JMSExpiration>0</JMSExpiration>
                    <JMSPriority>4</JMSPriority>
                </ConfigurableHeaders>
                <ConnectionReference>/JMS Connection.sharedjmscon</ConnectionReference>
            </config>
            <pd:inputBindings>
                <pfx6:input/>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="JMS Queue Sender Start">
            <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
            <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
            <pd:x>965</pd:x>
            <pd:y>73</pd:y>
            <config>
                <PermittedMessageType>Text</PermittedMessageType>
                <SessionAttributes>
                    <transacted>false</transacted>
                    <acknowledgeMode>1</acknowledgeMode>
                    <maxSessions>1</maxSessions>
                    <destination>q.deliveryStatus</destination>
                </SessionAttributes>
                <ConfigurableHeaders>
                    <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                    <JMSExpiration>0</JMSExpiration>
                    <JMSPriority>4</JMSPriority>
                </ConfigurableHeaders>
                <ConnectionReference>/JMS Connection.sharedjmscon</ConnectionReference>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <Body>
                        <xsl:value-of select="$Wait-for-JMS-Queue-Message-Start-End/ns:ActivityOutput/Body"/>
                    </Body>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="JMS Queue Sender End">
            <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
            <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
            <pd:x>963</pd:x>
            <pd:y>169</pd:y>
            <config>
                <PermittedMessageType>Text</PermittedMessageType>
                <SessionAttributes>
                    <transacted>false</transacted>
                    <acknowledgeMode>1</acknowledgeMode>
                    <maxSessions>1</maxSessions>
                    <destination>q.deliveryStatus</destination>
                </SessionAttributes>
                <ConfigurableHeaders>
                    <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                    <JMSExpiration>0</JMSExpiration>
                    <JMSPriority>4</JMSPriority>
                </ConfigurableHeaders>
                <ConnectionReference>/JMS Connection.sharedjmscon</ConnectionReference>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <Body>
                        <xsl:value-of select="$Wait-for-JMS-Queue-Message-Start-End/ns:ActivityOutput/Body"/>
                    </Body>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Update Delivery Log">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>461</pd:x>
        <pd:y>141</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>insert into deliverylog (`orderID`, `deliveryID`, `status`) VALUES (?,(SELECT id FROM scope where region = ?),?)</statement>
            <jdbcSharedConfig>/JDBC Connection sys-del.sharedjdbc</jdbcSharedConfig>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>orderID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>region</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>status</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <orderID>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-Order-XML/order/orderid)">
                            <xsl:value-of select="$Parse-Order-XML/order/orderid"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </orderID>
                <region>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-Order-XML/order/region)">
                            <xsl:value-of select="$Parse-Order-XML/order/region"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </region>
                <status>
                    <xsl:value-of select="&quot;unstarted&quot;"/>
                </status>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Receive Order</pd:from>
        <pd:to>Parse Order XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Check Deliver Time from GoogleMapAPI</pd:from>
        <pd:to>Parse GoogleMap XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse GoogleMap XML</pd:from>
        <pd:to>Send Receipt by Email</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Order XML</pd:from>
        <pd:to>Get Delivery Email</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Order XML</pd:from>
        <pd:to>Inform Vendor System</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Inform Vendor System</pd:from>
        <pd:to>Get Vendor Address</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Vendor Address</pd:from>
        <pd:to>Check Deliver Time from GoogleMapAPI</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send Receipt by Email</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Inform Courier</pd:from>
        <pd:to>iterate until delivery have ended</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>iterate until delivery have ended</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Delivery Email</pd:from>
        <pd:to>Update Delivery Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Update Delivery Log</pd:from>
        <pd:to>Inform Courier</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>